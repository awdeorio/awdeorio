#!/bin/bash

# Configuration
HOST=localhost
PORT=8000

# Stop on errors
set -Eeuo pipefail

# Intelligently choose the right server
if [ -e _config.yml ] && grep -q '^plugins' _config.yml; then
  # Jekyll with primer-spec remote them
  SERVERCMD="bundle exec jekyll serve --host $HOST --port $PORT"
elif [ -e _config.yml ]; then
  # Jekyll
  SERVERCMD="jekyll serve --host $HOST --port $PORT"
else
  # Default to HTTP file server
  SERVERCMD="python3 -m http.server --bind $HOST $PORT"
fi

# Register handler to kill server on exit
function cleanup() {
  kill $PID || echo "Error killing process $PID"
}
trap cleanup SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM ERR

# Start server
echo $SERVERCMD
$SERVERCMD & PID=$!

# Wait for server to start with a timeout
for i in  `seq 10` ; do
  if nc -z $HOST $PORT &> /dev/null; then
    break
  fi
  sleep 0.5
done
if ! kill -0 $PID &> /dev/null; then
  echo "Error: server process is not running"
  cleanup
  exit 1
fi
if ! nc -z $HOST $PORT &> /dev/null; then
  echo "Error: ${HOST}:${PORT} is not open"
  cleanup
  exit 1
fi

# Open browser tab
open "http://${HOST}:${PORT}"

# Wait for all processes to exit
wait
